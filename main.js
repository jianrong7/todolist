(()=>{"use strict";let e=[];if(null===localStorage.getItem("projects"))e=[];else{const t=JSON.parse(localStorage.getItem("projects"));e=t}const t=e=>{localStorage.clear(),localStorage.setItem("projects",JSON.stringify(e))},a=()=>{const s=n(),l=document.querySelector("#mainColumn");l.childNodes[1]&&l.removeChild(l.childNodes[1]);const r=document.createElement("div");r.classList.add("row");const o=document.createElement("ul");o.classList.add("list-group"),e.forEach((l=>{l.name===s&&l.tasks.forEach((s=>{if(0===s)return;const l=document.createElement("li");l.classList.add("list-group-item"),l.setAttribute("data-attr",s.name);const c=document.createElement("input");c.classList.add("form-check-input","me-1"),c.setAttribute("type","checkbox"),c.setAttribute("value",""),c.setAttribute("aria-label","..."),c.addEventListener("click",(s=>{(s=>{const{target:i}=s,l=n(),r=i.parentElement.innerText;let o,c;e.forEach((e=>{e.name===l&&(c=e,e.tasks.forEach((e=>{e.name===r&&(o=e)})))}));let d=e.indexOf(c);e[d].tasks.splice(e[d].tasks.indexOf(o),1),a(),t(e)})(s)}));const d=document.createElement("span");d.innerHTML=s.name;const m=document.createElement("a");m.classList.add("icons");const u=document.createElement("button");u.classList.add("btn","btn-primary"),u.setAttribute("type","button"),u.setAttribute("data-bs-toggle","modal"),u.setAttribute("data-bs-target","#newTask"),u.style.backgroundColor="white",u.style.border="0px";const b=document.createElement("img");b.src="/../dist/assets/edit.png",b.classList.add("icon","editIcon"),b.addEventListener("click",(e=>{i(e)})),u.appendChild(b),m.appendChild(u),l.appendChild(c),l.appendChild(d),l.appendChild(m),o.appendChild(l),r.appendChild(o)}))})),l.appendChild(r)},n=()=>{let e;return document.querySelectorAll(".projectItems").forEach((t=>{t.classList.contains("active")&&(e=t.innerText)})),e},s=s=>{let i=(()=>{const e=document.querySelector("#modalFormTask"),t=new FormData(e),a=JSON.stringify(Object.fromEntries(t)),n=JSON.parse(a);return e.reset(),""===n.taskTitle?(document.querySelector("#taskTitle").setAttribute("placeholder","Cannot be empty!"),null):n})(),l=(()=>{let e;return document.querySelectorAll(".priority").forEach((t=>{t.checked&&(e=t.id)})),e})(),r=(c=i.taskTitle,d=i.taskDescription,m=i.taskDueDate,{name:c,description:d,dueDate:m,priority:l,id:"_"+Math.random().toString(36).substr(2,9)}),o=n();var c,d,m;e.forEach((e=>{o===e.name&&e.tasks.push(r)})),t(e),a()},i=e=>{const{target:t}=e;console.log(t.parentElement.parentElement)},l=()=>{const n=document.querySelector("#sidebarProjects");n.innerHTML="",e.forEach((s=>{const i=document.createElement("a");i.classList.add("list-group-item","list-group-item-action","projectItems"),i.setAttribute("data-attr",s.id),i.innerHTML=s.name,i.addEventListener("click",(e=>{const{target:t}=e;(e=>{"closeProject"!==e.id&&(document.querySelectorAll(".projectItems").forEach((e=>{e.classList.contains("active")&&e.classList.remove("active")})),e.classList.add("active"),r(e),a(e))})(t)}));const o=document.createElement("button");o.setAttribute("type","button"),o.setAttribute("class","btn-close"),o.setAttribute("aria-label","Close"),o.setAttribute("id","closeProject"),o.addEventListener("click",(()=>{(a=>{let n;e.forEach((e=>{a===e.name&&(n=e)})),e.length>1?e.splice(e.indexOf(n),1):1==e.length&&(e=[]),t(e)})(s.name),l()})),i.appendChild(o),n.appendChild(i)}))},r=e=>{const t=document.querySelector("#mainColumn");t.innerHTML="";const a=document.createElement("div");a.classList.add("row");const n=document.createElement("div");n.classList.add("col-9"),n.innerHTML=e.innerText;const s=document.createElement("div");s.classList.add("col-3");const i=document.createElement("button");i.classList.add("btn","btn-primary"),i.setAttribute("type","button"),i.setAttribute("data-bs-toggle","modal"),i.setAttribute("data-bs-target","#newTask"),i.innerHTML="+ New Task",s.appendChild(i),a.appendChild(n),a.appendChild(s),t.appendChild(a)};(()=>{const e=document.querySelector(".modalContainer"),t=document.createElement("div");t.innerHTML='\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n            <h5 class="modal-title" id="newProjectLabel">New Project</h5>\n            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n            </div>\n            <div class="modal-body">\n                <div class="mb-3">\n                    <form id="modalForm">\n                        <label for="newProjectName" class="form-label">Name:</label>\n                        <input type="text" name="projectName" class="form-control" id="newProjectName"></input>\n                    </form>        \n                </div>\n            </div>\n            <div class="modal-footer">\n            <button type="button" class="btn btn-primary" id="newProjectBtn">Save changes</button>\n        </div>\n    </div>',t.classList.add("modal","fade"),t.setAttribute("id","newProject"),t.setAttribute("tabindex","-1"),t.setAttribute("aria-labelledby","newProject"),t.setAttribute("aria-hidden","true"),e.appendChild(t)})(),(()=>{const e=document.querySelector(".modalContainer"),t=document.createElement("div");t.innerHTML='\n    <div class="modal-dialog">\n    <div class="modal-content">\n        <div class="modal-header">\n        <h5 class="modal-title" id="newTaskLabel">New Task</h5>\n        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n        </div>\n        <div class="modal-body">\n            <form id="modalFormTask">\n                <div class="mb-3">\n                    <label for="taskTitle" class="form-label">Title:</label>\n                    <input type="text" class="form-control" id="taskTitle" name="taskTitle" required />\n                </div>\n                <div class="mb-3">\n                    <label for="description" class="form-label">Description:</label>\n                    <textarea class="form-control" id="description" rows="3" name="taskDescription" required></textarea>\n                </div>\n                <div class="mb-3">\n                    <label for="dueDate" class="form-label">Due Date:</label>\n                    <input type="date" class="form-control" id="dueDate" name="taskDueDate" required />\n                </div>\n                <div class="mb-3">\n                    <label class="form-label">Priority:</label>\n                    <div class="form-check">\n                        <input class="form-check-input priority" type="radio" name="flexRadioDefault" id="highPriority">\n                        <label class="form-check-label" for="highPriority">High</label>\n                    </div>\n                    <div class="form-check">\n                        <input class="form-check-input priority" type="radio" name="flexRadioDefault" id="mediumPriority" checked>\n                        <label class="form-check-label" for="mediumPriority">Medium</label>\n                    </div>\n                    <div class="form-check">\n                        <input class="form-check-input priority" type="radio" name="flexRadioDefault" id="lowPriority">\n                        <label class="form-check-label" for="lowPriority">Low</label>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class="modal-footer">\n        <button type="button" class="btn btn-primary" id="newTaskBtn">Save changes</button>\n        </div>\n    </div>\n    </div>',t.classList.add("modal","fade"),t.setAttribute("id","newTask"),t.setAttribute("tabindex","-1"),t.setAttribute("aria-labelledby","newTaskLabel"),t.setAttribute("aria-hidden","true"),e.appendChild(t)})(),(()=>{const e=document.querySelector("#body"),t=document.createElement("div");t.innerHTML='\n    <div class="container-fluid">\n    <span>To Do List</span>\n    </div>',t.classList.add("header"),t.classList.add("bg-primary"),e.prepend(t)})(),(()=>{const e=document.querySelector("#sidebar"),t=document.createElement("button");t.setAttribute("type","button"),t.setAttribute("class","btn btn-primary"),t.setAttribute("data-bs-toggle","modal"),t.setAttribute("data-bs-target","#newProject"),t.innerText="+ New Project",e.appendChild(t)})(),l(),document.querySelectorAll("button").forEach((a=>{a.addEventListener("click",(a=>{const{target:n}=a;"newProjectBtn"===n.id&&((()=>{const a=document.querySelector("#modalForm"),n=new FormData(a),s=JSON.stringify(Object.fromEntries(n)),i=JSON.parse(s);let l={name:i.projectName,id:"_"+Math.random().toString(36).substr(2,9),tasks:[0]};e.forEach((e=>{e.name!==i.projectName||alert("duplicate name")})),e.push(l),t(e),a.reset()})(),l()),"newTaskBtn"===n.id&&s()}))}))})();